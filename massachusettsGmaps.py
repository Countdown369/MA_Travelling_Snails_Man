#IMPORTS
import googlemaps
import numpy

#API KEY - put your own in as a string.

gmaps = googlemaps.Client(key=)

#VARS
#The 351 towns of MA will serve both as our origin and destination points.
#Minus Gosnold. I got rid of Gosnold. If you really wanna know how far a
#place is from Gosnold, just add ~12 km to the respective result from Aquinnah.
#Read from https://www.sec.state.ma.us/wheredoivotema/track/trackmyballot.aspx

#origins is used for strings that are called by the googlemaps lib.
#They include the name of the state of MA for specificness' sake.
origins = [
    "ABINGTON, MASSACHUSETTS",
    "ACTON, MASSACHUSETTS",
    "ACUSHNET, MASSACHUSETTS",
    "ADAMS, MASSACHUSETTS",
    "AGAWAM, MASSACHUSETTS",
    "ALFORD, MASSACHUSETTS",
    "AMESBURY, MASSACHUSETTS",
    "AMHERST, MASSACHUSETTS",
    "ANDOVER, MASSACHUSETTS",
    "AQUINNAH, MASSACHUSETTS",
    "ARLINGTON, MASSACHUSETTS",
    "ASHBURNHAM, MASSACHUSETTS",
    "ASHBY, MASSACHUSETTS",
    "ASHFIELD, MASSACHUSETTS",
    "ASHLAND, MASSACHUSETTS",
    "ATHOL, MASSACHUSETTS",
    "ATTLEBORO, MASSACHUSETTS",
    "AUBURN, MASSACHUSETTS",
    "AVON, MASSACHUSETTS",
    "AYER, MASSACHUSETTS",
    "BARNSTABLE, MASSACHUSETTS",
    "BARRE, MASSACHUSETTS",
    "BECKET, MASSACHUSETTS",
    "BEDFORD, MASSACHUSETTS",
    "BELCHERTOWN, MASSACHUSETTS",
    "BELLINGHAM, MASSACHUSETTS",
    "BELMONT, MASSACHUSETTS",
    "BERKLEY, MASSACHUSETTS",
    "BERLIN, MASSACHUSETTS",
    "BERNARDSTON, MASSACHUSETTS",
    "BEVERLY, MASSACHUSETTS",
    "BILLERICA, MASSACHUSETTS",
    "BLACKSTONE, MASSACHUSETTS",
    "BLANDFORD, MASSACHUSETTS",
    "BOLTON, MASSACHUSETTS",
    "BOSTON, MASSACHUSETTS",
    "BOURNE, MASSACHUSETTS",
    "BOXBOROUGH, MASSACHUSETTS",
    "BOXFORD, MASSACHUSETTS",
    "BOYLSTON, MASSACHUSETTS",
    "BRAINTREE, MASSACHUSETTS",
    "BREWSTER, MASSACHUSETTS",
    "BRIDGEWATER, MASSACHUSETTS",
    "BRIMFIELD, MASSACHUSETTS",
    "BROCKTON, MASSACHUSETTS",
    "BROOKFIELD, MASSACHUSETTS",
    "BROOKLINE, MASSACHUSETTS",
    "BUCKLAND, MASSACHUSETTS",
    "BURLINGTON, MASSACHUSETTS",
    "CAMBRIDGE, MASSACHUSETTS",
    "CANTON, MASSACHUSETTS",
    "CARLISLE, MASSACHUSETTS",
    "CARVER, MASSACHUSETTS",
    "CHARLEMONT, MASSACHUSETTS",
    "CHARLTON, MASSACHUSETTS",
    "CHATHAM, MASSACHUSETTS",
    "CHELMSFORD, MASSACHUSETTS",
    "CHELSEA, MASSACHUSETTS",
    "CHESHIRE, MASSACHUSETTS",
    "CHESTER, MASSACHUSETTS",
    "CHESTERFIELD, MASSACHUSETTS",
    "CHICOPEE, MASSACHUSETTS",
    "CHILMARK, MASSACHUSETTS",
    "CLARKSBURG, MASSACHUSETTS",
    "CLINTON, MASSACHUSETTS",
    "COHASSET, MASSACHUSETTS",
    "COLRAIN, MASSACHUSETTS",
    "CONCORD, MASSACHUSETTS",
    "CONWAY, MASSACHUSETTS",
    "CUMMINGTON, MASSACHUSETTS",
    "DALTON, MASSACHUSETTS",
    "DANVERS, MASSACHUSETTS",
    "DARTMOUTH, MASSACHUSETTS",
    "DEDHAM, MASSACHUSETTS",
    "DEERFIELD, MASSACHUSETTS",
    "DENNIS, MASSACHUSETTS",
    "DIGHTON, MASSACHUSETTS",
    "DOUGLAS, MASSACHUSETTS",
    "DOVER, MASSACHUSETTS",
    "DRACUT, MASSACHUSETTS",
    "DUDLEY, MASSACHUSETTS",
    "DUNSTABLE, MASSACHUSETTS",
    "DUXBURY, MASSACHUSETTS",
    "EAST BRIDGEWATER, MASSACHUSETTS",
    "EAST BROOKFIELD, MASSACHUSETTS",
    "EAST LONGMEADOW, MASSACHUSETTS",
    "EASTHAM, MASSACHUSETTS",
    "EASTHAMPTON, MASSACHUSETTS",
    "EASTON, MASSACHUSETTS",
    "EDGARTOWN, MASSACHUSETTS",
    "EGREMONT, MASSACHUSETTS",
    "ERVING, MASSACHUSETTS",
    "ESSEX, MASSACHUSETTS",
    "EVERETT, MASSACHUSETTS",
    "FAIRHAVEN, MASSACHUSETTS",
    "FALL RIVER, MASSACHUSETTS",
    "FALMOUTH, MASSACHUSETTS",
    "FITCHBURG, MASSACHUSETTS",
    "FLORIDA, MASSACHUSETTS",
    "FOXBOROUGH, MASSACHUSETTS",
    "FRAMINGHAM, MASSACHUSETTS",
    "FRANKLIN, MASSACHUSETTS",
    "FREETOWN, MASSACHUSETTS",
    "GARDNER, MASSACHUSETTS",
    "GEORGETOWN, MASSACHUSETTS",
    "GILL, MASSACHUSETTS",
    "GLOUCESTER, MASSACHUSETTS",
    "GOSHEN, MASSACHUSETTS",
    "GRAFTON, MASSACHUSETTS",
    "GRANBY, MASSACHUSETTS",
    "GRANVILLE, MASSACHUSETTS",
    "GREAT BARRINGTON, MASSACHUSETTS",
    "GREENFIELD, MASSACHUSETTS",
    "GROTON, MASSACHUSETTS",
    "GROVELAND, MASSACHUSETTS",
    "HADLEY, MASSACHUSETTS",
    "HALIFAX, MASSACHUSETTS",
    "HAMILTON, MASSACHUSETTS",
    "HAMPDEN, MASSACHUSETTS",
    "HANCOCK, MASSACHUSETTS",
    "HANOVER, MASSACHUSETTS",
    "HANSON, MASSACHUSETTS",
    "HARDWICK, MASSACHUSETTS",
    "HARVARD, MASSACHUSETTS",
    "HARWICH, MASSACHUSETTS",
    "HATFIELD, MASSACHUSETTS",
    "HAVERHILL, MASSACHUSETTS",
    "HAWLEY, MASSACHUSETTS",
    "HEATH, MASSACHUSETTS",
    "HINGHAM, MASSACHUSETTS",
    "HINSDALE, MASSACHUSETTS",
    "HOLBROOK, MASSACHUSETTS",
    "HOLDEN, MASSACHUSETTS",
    "HOLLAND, MASSACHUSETTS",
    "HOLLISTON, MASSACHUSETTS",
    "HOLYOKE, MASSACHUSETTS",
    "HOPEDALE, MASSACHUSETTS",
    "HOPKINTON, MASSACHUSETTS",
    "HUBBARDSTON, MASSACHUSETTS",
    "HUDSON, MASSACHUSETTS",
    "HULL, MASSACHUSETTS",
    "HUNTINGTON, MASSACHUSETTS",
    "IPSWICH, MASSACHUSETTS",
    "KINGSTON, MASSACHUSETTS",
    "LAKEVILLE, MASSACHUSETTS",
    "LANCASTER, MASSACHUSETTS",
    "LANESBOROUGH, MASSACHUSETTS",
    "LAWRENCE, MASSACHUSETTS",
    "LEE, MASSACHUSETTS",
    "LEICESTER, MASSACHUSETTS",
    "LENOX, MASSACHUSETTS",
    "LEOMINSTER, MASSACHUSETTS",
    "LEVERETT, MASSACHUSETTS",
    "LEXINGTON, MASSACHUSETTS",
    "LEYDEN, MASSACHUSETTS",
    "LINCOLN, MASSACHUSETTS",
    "LITTLETON, MASSACHUSETTS",
    "LONGMEADOW, MASSACHUSETTS",
    "LOWELL, MASSACHUSETTS",
    "LUDLOW, MASSACHUSETTS",
    "LUNENBURG, MASSACHUSETTS",
    "LYNN, MASSACHUSETTS",
    "LYNNFIELD, MASSACHUSETTS",
    "MALDEN, MASSACHUSETTS",
    "MANCHESTER-BY-THE-SEA, MASSACHUSETTS",
    "MANSFIELD, MASSACHUSETTS",
    "MARBLEHEAD, MASSACHUSETTS",
    "MARION, MASSACHUSETTS",
    "MARLBOROUGH, MASSACHUSETTS",
    "MARSHFIELD, MASSACHUSETTS",
    "MASHPEE, MASSACHUSETTS",
    "MATTAPOISETT, MASSACHUSETTS",
    "MAYNARD, MASSACHUSETTS",
    "MEDFIELD, MASSACHUSETTS",
    "MEDFORD, MASSACHUSETTS",
    "MEDWAY, MASSACHUSETTS",
    "MELROSE, MASSACHUSETTS",
    "MENDON, MASSACHUSETTS",
    "MERRIMAC, MASSACHUSETTS",
    "METHUEN, MASSACHUSETTS",
    "MIDDLEBOROUGH, MASSACHUSETTS",
    "MIDDLEFIELD, MASSACHUSETTS",
    "MIDDLETON, MASSACHUSETTS",
    "MILFORD, MASSACHUSETTS",
    "MILLBURY, MASSACHUSETTS",
    "MILLIS, MASSACHUSETTS",
    "MILLVILLE, MASSACHUSETTS",
    "MILTON, MASSACHUSETTS",
    "MONROE, MASSACHUSETTS",
    "MONSON, MASSACHUSETTS",
    "MONTAGUE, MASSACHUSETTS",
    "MONTEREY, MASSACHUSETTS",
    "MONTGOMERY, MASSACHUSETTS",
    "MOUNT WASHINGTON, MASSACHUSETTS",
    "NAHANT, MASSACHUSETTS",
    "NANTUCKET, MASSACHUSETTS",
    "NATICK, MASSACHUSETTS",
    "NEEDHAM, MASSACHUSETTS",
    "NEW ASHFORD, MASSACHUSETTS",
    "NEW BEDFORD, MASSACHUSETTS",
    "NEW BRAINTREE, MASSACHUSETTS",
    "NEW MARLBOROUGH, MASSACHUSETTS",
    "NEW SALEM, MASSACHUSETTS",
    "NEWBURY, MASSACHUSETTS",
    "NEWBURYPORT, MASSACHUSETTS",
    "NEWTON, MASSACHUSETTS",
    "NORFOLK, MASSACHUSETTS",
    "NORTH ADAMS, MASSACHUSETTS",
    "NORTH ANDOVER, MASSACHUSETTS",
    "NORTH ATTLEBOROUGH, MASSACHUSETTS",
    "NORTH BROOKFIELD, MASSACHUSETTS",
    "NORTH READING, MASSACHUSETTS",
    "NORTHAMPTON, MASSACHUSETTS",
    "NORTHBOROUGH, MASSACHUSETTS",
    "NORTHBRIDGE, MASSACHUSETTS",
    "NORTHFIELD, MASSACHUSETTS",
    "NORTON, MASSACHUSETTS",
    "NORWELL, MASSACHUSETTS",
    "NORWOOD, MASSACHUSETTS",
    "OAK BLUFFS, MASSACHUSETTS",
    "OAKHAM, MASSACHUSETTS",
    "ORANGE, MASSACHUSETTS",
    "ORLEANS, MASSACHUSETTS",
    "OTIS, MASSACHUSETTS",
    "OXFORD, MASSACHUSETTS",
    "PALMER, MASSACHUSETTS",
    "PAXTON, MASSACHUSETTS",
    "PEABODY, MASSACHUSETTS",
    "PELHAM, MASSACHUSETTS",
    "PEMBROKE, MASSACHUSETTS",
    "PEPPERELL, MASSACHUSETTS",
    "PERU, MASSACHUSETTS",
    "PETERSHAM, MASSACHUSETTS",
    "PHILLIPSTON, MASSACHUSETTS",
    "PITTSFIELD, MASSACHUSETTS",
    "PLAINFIELD, MASSACHUSETTS",
    "PLAINVILLE, MASSACHUSETTS",
    "PLYMOUTH, MASSACHUSETTS",
    "PLYMPTON, MASSACHUSETTS",
    "PRINCETON, MASSACHUSETTS",
    "PROVINCETOWN, MASSACHUSETTS",
    "QUINCY, MASSACHUSETTS",
    "RANDOLPH, MASSACHUSETTS",
    "RAYNHAM, MASSACHUSETTS",
    "READING, MASSACHUSETTS",
    "REHOBOTH, MASSACHUSETTS",
    "REVERE, MASSACHUSETTS",
    "RICHMOND, MASSACHUSETTS",
    "ROCHESTER, MASSACHUSETTS",
    "ROCKLAND, MASSACHUSETTS",
    "ROCKPORT, MASSACHUSETTS",
    "ROWE, MASSACHUSETTS",
    "ROWLEY, MASSACHUSETTS",
    "ROYALSTON, MASSACHUSETTS",
    "RUSSELL, MASSACHUSETTS",
    "RUTLAND, MASSACHUSETTS",
    "SALEM, MASSACHUSETTS",
    "SALISBURY, MASSACHUSETTS",
    "SANDISFIELD, MASSACHUSETTS",
    "SANDWICH, MASSACHUSETTS",
    "SAUGUS, MASSACHUSETTS",
    "SAVOY, MASSACHUSETTS",
    "SCITUATE, MASSACHUSETTS",
    "SEEKONK, MASSACHUSETTS",
    "SHARON, MASSACHUSETTS",
    "SHEFFIELD, MASSACHUSETTS",
    "SHELBURNE, MASSACHUSETTS",
    "SHERBORN, MASSACHUSETTS",
    "SHIRLEY, MASSACHUSETTS",
    "SHREWSBURY, MASSACHUSETTS",
    "SHUTESBURY, MASSACHUSETTS",
    "SOMERSET, MASSACHUSETTS",
    "SOMERVILLE, MASSACHUSETTS",
    "SOUTH HADLEY, MASSACHUSETTS",
    "SOUTHAMPTON, MASSACHUSETTS",
    "SOUTHBOROUGH, MASSACHUSETTS",
    "SOUTHBRIDGE, MASSACHUSETTS",
    "SOUTHWICK, MASSACHUSETTS",
    "SPENCER, MASSACHUSETTS",
    "SPRINGFIELD, MASSACHUSETTS",
    "STERLING, MASSACHUSETTS",
    "STOCKBRIDGE, MASSACHUSETTS",
    "STONEHAM, MASSACHUSETTS",
    "STOUGHTON, MASSACHUSETTS",
    "STOW, MASSACHUSETTS",
    "STURBRIDGE, MASSACHUSETTS",
    "SUDBURY, MASSACHUSETTS",
    "SUNDERLAND, MASSACHUSETTS",
    "SUTTON, MASSACHUSETTS",
    "SWAMPSCOTT, MASSACHUSETTS",
    "SWANSEA, MASSACHUSETTS",
    "TAUNTON, MASSACHUSETTS",
    "TEMPLETON, MASSACHUSETTS",
    "TEWKSBURY, MASSACHUSETTS",
    "TISBURY, MASSACHUSETTS",
    "TOLLAND, MASSACHUSETTS",
    "TOPSFIELD, MASSACHUSETTS",
    "TOWNSEND, MASSACHUSETTS",
    "TRURO, MASSACHUSETTS",
    "TYNGSBOROUGH, MASSACHUSETTS",
    "TYRINGHAM, MASSACHUSETTS",
    "UPTON, MASSACHUSETTS",
    "UXBRIDGE, MASSACHUSETTS",
    "WAKEFIELD, MASSACHUSETTS",
    "WALES, MASSACHUSETTS",
    "WALPOLE, MASSACHUSETTS",
    "WALTHAM, MASSACHUSETTS",
    "WARE, MASSACHUSETTS",
    "WAREHAM, MASSACHUSETTS",
    "WARREN, MASSACHUSETTS",
    "WARWICK, MASSACHUSETTS",
    "WASHINGTON, MASSACHUSETTS",
    "WATERTOWN, MASSACHUSETTS",
    "WAYLAND, MASSACHUSETTS",
    "WEBSTER, MASSACHUSETTS",
    "WELLESLEY, MASSACHUSETTS",
    "WELLFLEET, MASSACHUSETTS",
    "WENDELL, MASSACHUSETTS",
    "WENHAM, MASSACHUSETTS",
    "WEST BOYLSTON, MASSACHUSETTS",
    "WEST BRIDGEWATER, MASSACHUSETTS",
    "WEST BROOKFIELD, MASSACHUSETTS",
    "WEST NEWBURY, MASSACHUSETTS",
    "WEST SPRINGFIELD, MASSACHUSETTS",
    "WEST STOCKBRIDGE, MASSACHUSETTS",
    "WEST TISBURY, MASSACHUSETTS",
    "WESTBOROUGH, MASSACHUSETTS",
    "WESTFIELD, MASSACHUSETTS",
    "WESTFORD, MASSACHUSETTS",
    "WESTHAMPTON, MASSACHUSETTS",
    "WESTMINSTER, MASSACHUSETTS",
    "WESTON, MASSACHUSETTS",
    "WESTPORT, MASSACHUSETTS",
    "WESTWOOD, MASSACHUSETTS",
    "WEYMOUTH, MASSACHUSETTS",
    "WHATELY, MASSACHUSETTS",
    "WHITMAN, MASSACHUSETTS",
    "WILBRAHAM, MASSACHUSETTS",
    "WILLIAMSBURG, MASSACHUSETTS",
    "WILLIAMSTOWN, MASSACHUSETTS",
    "WILMINGTON, MASSACHUSETTS",
    "WINCHENDON, MASSACHUSETTS",
    "WINCHESTER, MASSACHUSETTS",
    "WINDSOR, MASSACHUSETTS",
    "WINTHROP, MASSACHUSETTS",
    "WOBURN, MASSACHUSETTS",
    "WORCESTER, MASSACHUSETTS",
    "WORTHINGTON, MASSACHUSETTS",
    "WRENTHAM, MASSACHUSETTS",
    "YARMOUTH, MASSACHUSETTS",
]


#labels is used for the names of the serialized list (.txt) files.
#These strings are town names without the phrase ", MASSACHUSETTS".
labels = ["town"] * 350
for s in range(350):
    labels[s] = (origins[s])[:-15]
            
#Split the list into sublists of length 25 (googlemaps only likes 25 destinations / origins per request...this gets around it.
l0 = origins[0:25]
l1 = origins[25:50]
l2 = origins[50:75]
l3 = origins[75:100]
l4 = origins[100:125]
l5 = origins[125:150]
l6 = origins[150:175]
l7 = origins[175:200]
l8 = origins[200:225]
l9 = origins[225:250]
l10 = origins[250:275]
l11 = origins[275:300]
l12 = origins[300:325]
l13 = origins[325:]

townlists = [l0,l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13]
matrices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

#A function which returns a list of a location's distances, by car, in kilometers, to every town in MA in alphabetical order.
def findMassachusettsDistances(town, d):

    #Produces distance matrices
    for g in range(d):
        matrices[g] = gmaps.distance_matrix(town, townlists[g])

    #Store distances in list
    myAddress = ["NA"] * 25 * d
    for u in range(350):
        try:
            myAddress[u] = (matrices[u // 25])['rows'][0]['elements'][u % 25]['distance']['text']
        except KeyError:
            pass
        except IndexError:
            pass
        except TypeError:
            try:
                myAddress[u] = (matrices[u // 25])['rows'][0]['elements'][u % 25]['distance']['text']
            except:
                pass

    #Take out " km" from every value, convert to float from str, and set te town compared with itself manually to 0.
    for v in range(25 * d):
        myAddress[v] = (myAddress[v])[:-3]
        try:
            myAddress[v] = float(myAddress[v])
        except ValueError:
            pass
        if len(str(myAddress[v])) == 0:
            myAddress[v] = float(0)
        
    #Posterity / making sure the program didn't crash
    print("Length of list for " + town + ": " + str(len(myAddress))) #If not 25 * d, something went wrong.
    print(myAddress)
    print()
    
    return myAddress

#Use labels to store / serialize the lists into text files.

results = []
inStart = 252
exEnd = 350

for runTown in (origins[inStart:exEnd]):
    results.append(findMassachusettsDistances(runTown, 14))

#Want deserialized lists? They're all in results[townIndexInAlphabeticalOrder] at this point.
        
for result in range(len(results)):
    for listitem in (results[result]):
        (open(('maDistsLists/' + str(labels[result + inStart]) + '.txt'), 'a')).write(str(listitem) + '\n')
